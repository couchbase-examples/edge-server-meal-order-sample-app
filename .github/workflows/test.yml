name: macOS CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Desktop
        run: |
          brew install --cask docker
          open -a Docker
          # Wait for Docker to start
          while ! docker system info > /dev/null 2>&1; do
            echo "Waiting for Docker to start..."
            sleep 5
          done

      - name: Create .env file
        run: |
          echo "EDGE_SERVER_BASE_URL=http://localhost:60000" > .env

      - name: Set up test environment
        run: |
          # Create a Dockerfile for the test environment
          cat << EOF > Dockerfile.test
          FROM --platform=linux/amd64 node:latest
          WORKDIR /app

          # Install SSL certificates and macOS specific dependencies
          RUN apt-get update && apt-get install -y \
              libgtk2.0-0 \
              libgtk-3-0 \
              libgbm-dev \
              libnotify-dev \
              libgconf-2-4 \
              libnss3 \
              libxss1 \
              libasound2 \
              libxtst6 \
              xauth \
              xvfb \
              procps \
              x11vnc \
              x11-xkb-utils \
              xfonts-100dpi \
              xfonts-75dpi \
              xfonts-scalable \
              xvfb \
              ca-certificates \
              libnss3-tools \
              netcat-traditional \
              curl

          # Copy application files
          COPY . .
          COPY test/raw/couchbase-edge-server /usr/local/bin/
          COPY test/raw/config-tls-replication-sync.json /app/
          COPY test/raw/resetdemo.sh /app/

          # Set up certificates
          RUN mkdir -p ~/.pki/nssdb
          RUN certutil -d ~/.pki/nssdb -N --empty-password

          # Make scripts executable and install dependencies
          RUN chmod +x /usr/local/bin/couchbase-edge-server
          RUN chmod +x /app/resetdemo.sh
          RUN npm ci
          RUN npm install cypress --save-dev
          RUN npx cypress verify

          # Set environment for macOS compatibility
          ENV CYPRESS_VERIFY_TIMEOUT=100000
          ENV CI=1
          EOF

      - name: Build and run test container
        run: |
          docker build --platform linux/amd64 -t react-test-app -f Dockerfile.test .
          docker run -d --name test-container \
            --platform linux/amd64 \
            -p 5173:5173 \
            -p 60000:60000 \
            -e DISPLAY=:99 \
            react-test-app /bin/bash -c '
              # Start Xvfb for Cypress
              Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 & \
              
              # Start Couchbase Edge server
              couchbase-edge-server --verbose --create-cert CN=localhost certfile.pem keyfile && \
              certutil -d ~/.pki/nssdb -A -n "couchbase-edge" -t "P,," -i certfile.pem && \
              echo "Starting Couchbase Edge server..." && \
              sh resetdemo.sh & \
              
              # Start dev server
              echo "Starting dev server..." && \
              npm run dev & \
              
              # Health check function with increased timeout
              check_service() {
                local url=$1
                local service_name=$2
                local max_attempts=45  # Increased attempts for macOS
                local attempt=1
                
                echo "Checking $service_name..."
                while [ $attempt -le $max_attempts ]; do
                  if curl -s "$url" > /dev/null; then
                    echo "$service_name is up!"
                    return 0
                  fi
                  echo "Attempt $attempt: $service_name not ready yet..."
                  sleep 3  # Increased sleep time for macOS
                  attempt=$((attempt + 1))
                done
                
                echo "$service_name failed to start after $max_attempts attempts"
                return 1
              }
              
              # Wait for services and show debug info
              sleep 10  # Increased initial wait time for macOS
              ps aux
              netstat -tulpn
              
              # Check services
              if ! check_service "http://localhost:60000" "Couchbase Edge server"; then
                exit 1
              fi
              
              if ! check_service "http://localhost:5173" "Dev server"; then
                exit 1
              fi
              
              # Run tests with debug logging
              echo "Running unit tests..."
              npm run test
              
              echo "Running Cypress tests..."
              DEBUG=cypress:* npx cypress run --browser chrome
            '

          # Show container logs with follow
          docker logs -f test-container || true

          # Get container exit code and show final debug info
          EXIT_CODE=$(docker inspect test-container --format="{{.State.ExitCode}}")

          echo "Final container state:"
          docker inspect test-container --format="{{.State.Status}}"

          echo "Container logs:"
          docker logs test-container

          # Cleanup
          docker stop test-container || true
          docker rm test-container || true

          # Exit with the container's exit code
          exit $EXIT_CODE
